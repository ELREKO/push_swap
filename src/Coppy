
// Einlesen Ruckwaerts
void  ft_split_arg (t_stack **lst_ret, char *str, int *error)
{
	int i_count;
	int i_count_read;
	char *str_value;
	i_count = ft_strlen(str) - 1;

	while (i_count >= 0)
	{
		i_count_read = 0;
		while (str[i_count] != ' ' && str[i_count] != '\t' && str[i_count] != '\0')
		{
			i_count_read++;
			i_count--;
		}
		if (i_count_read > 0)
		{
			str_value = (char *)malloc(sizeof(char) * (i_count_read + 1));
			if(!str_value)
				return;
			i_count_read = 0;
			i_count++;
			while (str[i_count] != ' ' && str[i_count] != '\t' && str[i_count] != '\0')
				str_value[i_count_read++] = str[i_count++];
			str_value[i_count_read] = '\0';
			ft_add_arg(lst_ret, str_value, error);
			free(str_value);
			i_count = i_count - i_count_read;
		}
		i_count--;


	}
	return;
}


// fowarz lessen! 
void  ft_split_arg (t_stack **lst_ret, char *str, int *error)
{
	int i_count;
	int i_count_check;
	char *str_value;

	i_count = 0;
	while (str[i_count] != '\0')
	{
		i_count_check = 0; 
		while (str[i_count] != ' ' && str[i_count] != '\t' && str[i_count] != '\0')
		{
			i_count_check++;
			i_count++;
		}
		if (i_count_check > 0)
		{
			str_value = (char *)malloc(sizeof(char) * (i_count_check + 1));
			if(!str_value)
				return;
			i_count = i_count - i_count_check;
			i_count_check = 0;
			while (str[i_count] != ' ' && str[i_count] != '\t' && str[i_count] != '\0')
				str_value[i_count_check++] = str[i_count++];
			str_value[i_count_check] = '\0';
			ft_add_arg(lst_ret, str_value, error);
			free(str_value);
		}
		if (str[i_count] != '\0')
			i_count++;
	}
	
	//lst_ret = NULL;
	return;
}